// Adjust the background layer's height to fit its content (cmd shift j)

function isLayerInGroup(name,group) {
    var BGlayer;
    for (var i=0; i<groupLayers.array().count(); i++) {
        var layer = groupLayers.array()[i];
        if ([layer name] == name) {
			BGlayer = layer;
		}
	}
    return BGlayer;
}

var layer = selection[0];
var layerHeight = [[layer frame] height];
var layerWidth = [[layer frame] width];
var layerX = [[layer frame] x];
var layerY = [[layer frame] y];

var splitLayer = [];
var splitLayer = [layer name].split(':');

var offsetTop,offsetBottom;

if (splitLayer.length !== 2) {
	layer.name = "10:10";
	splitLayer = [layer name].split(':');
}

offsetTop = parseInt(splitLayer[0]);
offsetBottom = parseInt(splitLayer[1]);

var parentGroup = [layer parentGroup];
var groupLayers = [parentGroup layers];

var BG = isLayerInGroup("Bounding Box",parentGroup);

if (BG) {
	[[BG frame] setHeight:(layerHeight + offsetTop + offsetBottom)];
	[[BG frame] setX: 0];
	[[BG frame] setY: 0];
	[[layer frame] setY: offsetTop];	
} else {
	var newGroup = [parentGroup addLayerOfType:'group'];
	newGroup.name = "New Group";
    
	var newRect = [newGroup addLayerOfType:'rectangle']
	newRect.name = "Bounding Box";
	[[newRect frame] setHeight:layerHeight];
	[[newRect frame] setWidth:layerWidth];
	[[newRect frame] setX: layerX];
	[[newRect frame] setY: layerY];
    
	var style = [[newRect style] fills];
	style.addNewStylePart();
    
	newLayer = [layer duplicate];
	[parentGroup removeLayer:newLayer];
	[newGroup addLayer: newLayer];
	[parentGroup removeLayer: layer];
}